Here is the setup you requested:

**main.tf**
```plain
# Configure the Docker provider
provider "docker" {
  version = "2.0.0"
}

# Create a new Docker network
resource "docker_network" "grafana" {
  name = "grafana-network"
}

# Create a new Docker container for Grafana
resource "docker_container" "grafana" {
  name  = "grafana"
  image = "grafana/grafana:latest"
  ports {
    internal = 3000
    external = 3000
  }
  env = [
    "GF_SERVER_HTTP_PORT=3000",
    "GF_SERVER_ROOT_URL=http://localhost:3000",
    "GF_SECURITY_ADMIN_USER=${var.admin_user}",
    "GF_SECURITY_ADMIN_PASSWORD=${var.admin_password}"
  ]
  volumes {
    volume {
      name = "grafana-data"
    }
  }
  networks {
    grafana = docker_network.grafana.id
  }
}

# Create a Docker volume for persistent storage
resource "docker_volume" "grafana-data" {
  name = "grafana-data"
}
```

**variables.tf**
```plain
variable "admin_user" {
  type = string
  default = "admin"
}

variable "admin_password" {
  type = string
  default = "password"
}
```

**outputs.tf**
```plain
output "grafana_url" {
  value = "http://localhost:3000"
}
```

**docker-compose.yml**
```yml
version: '3'
services:
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SERVER_HTTP_PORT=3000
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - grafana-network

networks:
  grafana-network:
    driver: bridge

volumes:
  grafana-data:
```

**README.md**
```markdown
# Grafana Setup

## Prerequisites

* Terraform installed on your machine
* Docker installed on your machine

## Setup

1. Initialize the Terraform working directory: `terraform init`
2. Create a `terraform.tfvars` file with the following content:
```plaintext
admin_user = "your_admin_user"
admin_password = "your_admin_password"
```
Replace `your_admin_user` and `your_admin_password` with your desired values.
3. Apply the Terraform configuration: `terraform apply`
4. Once the deployment is complete, you can access Grafana at `http://localhost:3000`

## Using the Setup

* Log in to Grafana with the admin user and password you set in the `terraform.tfvars` file.
* You can now add dashboards, users, and data sources as needed.

## Notes

* This setup uses a local Docker volume for persistent storage. If you want to use a different storage solution, you can modify the `main.tf` file accordingly.
* Make sure to keep your `terraform.tfvars` file secure, as it contains sensitive information (admin user and password).
```

You can now use the `terraform apply` command to deploy Grafana to your local machine, and access it at `http://localhost:3000`.
